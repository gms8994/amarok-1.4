# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@




VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = amarokapp$(EXEEXT)
subdir = amarok/src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(configdir)" \
	"$(DESTDIR)$(kde_servicetypesdir)" \
	"$(DESTDIR)$(profiledatadir)" "$(DESTDIR)$(protocoldir)" \
	"$(DESTDIR)$(rcdir)" "$(DESTDIR)$(servicemenudir)" \
	"$(DESTDIR)$(xdg_appsdir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libamarok_la_DEPENDENCIES =  \
	$(top_builddir)/amarok/src/amarokcore/libamarokcore.la \
	$(top_builddir)/amarok/src/analyzers/libanalyzers.la \
	$(top_builddir)/amarok/src/plugin/libplugin.la \
	$(top_builddir)/amarok/src/statusbar/libstatusbar.la \
	$(top_builddir)/amarok/src/metadata/libmetadata.la \
	$(top_builddir)/amarok/src/magnatunebrowser/libmagnatunebrowser.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(LIB_SQLITE_LOCAL) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_libamarok_la_OBJECTS = actionclasses.lo app.lo atomicstring.lo \
	atomicurl.lo browserbar.lo clicklineedit.lo \
	collectionbrowser.lo collectiondb.lo columnlist.lo \
	configdialog.lo contextbrowser.lo coverfetcher.lo \
	covermanager.lo cuefile.lo deletedialog.lo \
	deviceconfiguredialog.lo devicemanager.lo directorylist.lo \
	dynamicmode.lo enginebase.lo enginecontroller.lo \
	engineobserver.lo equalizergraph.lo equalizerpresetmanager.lo \
	equalizersetup.lo expression.lo fht.lo filebrowser.lo \
	hintlineedit.lo htmlview.lo iconloader.lo k3bexporter.lo \
	kbookmarkhandler.lo ktrm.lo lastfm.lo mediabrowser.lo \
	mediadevicemanager.lo medium.lo mediumpluginmanager.lo \
	metabundle.lo metabundlesaver.lo moodbar.lo \
	mountpointmanager.lo multitabbar.lo mydiroperator.lo osd.lo \
	pixmapviewer.lo playerwindow.lo playlist.lo playlistbrowser.lo \
	playlistbrowseritem.lo playlistitem.lo playlistloader.lo \
	playlistselection.lo playlistwindow.lo pluginmanager.lo \
	podcastsettings.lo prettypopupmenu.lo queuemanager.lo \
	refreshimages.lo scancontroller.lo scriptmanager.lo \
	scrobbler.lo sliderwidget.lo smartplaylisteditor.lo \
	socketserver.lo starmanager.lo statistics.lo systray.lo \
	tagdialog.lo tagguesser.lo threadmanager.lo tooltip.lo \
	trackpickerdialog.lo tracktooltip.lo transferdialog.lo \
	xmlloader.lo xspfplaylist.lo editfilterdialog.lo
#>- libamarok_la_OBJECTS = $(am_libamarok_la_OBJECTS)
#>+ 27
libamarok_la_final_OBJECTS = libamarok_la.all_cpp.lo 
libamarok_la_nofinal_OBJECTS = actionclasses.lo app.lo atomicstring.lo \
	atomicurl.lo browserbar.lo clicklineedit.lo \
	collectionbrowser.lo collectiondb.lo columnlist.lo \
	configdialog.lo contextbrowser.lo coverfetcher.lo \
	covermanager.lo cuefile.lo deletedialog.lo \
	deviceconfiguredialog.lo devicemanager.lo directorylist.lo \
	dynamicmode.lo enginebase.lo enginecontroller.lo \
	engineobserver.lo equalizergraph.lo equalizerpresetmanager.lo \
	equalizersetup.lo expression.lo fht.lo filebrowser.lo \
	hintlineedit.lo htmlview.lo iconloader.lo k3bexporter.lo \
	kbookmarkhandler.lo ktrm.lo lastfm.lo mediabrowser.lo \
	mediadevicemanager.lo medium.lo mediumpluginmanager.lo \
	metabundle.lo metabundlesaver.lo moodbar.lo \
	mountpointmanager.lo multitabbar.lo mydiroperator.lo osd.lo \
	pixmapviewer.lo playerwindow.lo playlist.lo playlistbrowser.lo \
	playlistbrowseritem.lo playlistitem.lo playlistloader.lo \
	playlistselection.lo playlistwindow.lo pluginmanager.lo \
	podcastsettings.lo prettypopupmenu.lo queuemanager.lo \
	refreshimages.lo scancontroller.lo scriptmanager.lo \
	scrobbler.lo sliderwidget.lo smartplaylisteditor.lo \
	socketserver.lo starmanager.lo statistics.lo systray.lo \
	tagdialog.lo tagguesser.lo threadmanager.lo tooltip.lo \
	trackpickerdialog.lo tracktooltip.lo transferdialog.lo \
	xmlloader.lo xspfplaylist.lo editfilterdialog.lo Options1.lo Options2.lo Options4.lo Options5.lo Options7.lo Options8.lo dbsetup.lo deletedialogbase.lo firstrunwizard.lo newdynamic.lo organizecollectiondialog.lo podcastsettingsbase.lo scriptmanagerbase.lo tagdialogbase.lo tagguesserconfigdialog.lo trackpickerdialogbase.lo
@KDE_USE_FINAL_FALSE@libamarok_la_OBJECTS = $(libamarok_la_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@libamarok_la_OBJECTS = $(libamarok_la_final_OBJECTS)
#>- libamarok_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(libamarok_la_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
libamarok_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(libamarok_la_LDFLAGS) $(LDFLAGS) -o $@
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_amarokapp_OBJECTS = main.$(OBJEXT)
#>- amarokapp_OBJECTS = $(am_amarokapp_OBJECTS)
#>+ 1
amarokapp_OBJECTS = main.$(OBJEXT)
amarokapp_DEPENDENCIES =  \
	$(top_builddir)/amarok/src/amarokcore/libamarokcore.la \
	libamarok.la \
	$(top_builddir)/amarok/src/analyzers/libanalyzers.la \
	$(top_builddir)/amarok/src/plugin/libplugin.la \
	$(top_builddir)/amarok/src/statusbar/libstatusbar.la \
	$(top_builddir)/amarok/src/metadata/libmetadata.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(LIB_SQLITE_LOCAL) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
#>- amarokapp_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(amarokapp_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
amarokapp_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(amarokapp_LDFLAGS) $(LDFLAGS) -o $@
binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
SCRIPTS = $(bin_SCRIPTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libamarok_la_SOURCES) $(amarokapp_SOURCES)
DIST_SOURCES = $(libamarok_la_SOURCES) $(amarokapp_SOURCES)
#>- RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
#>- 	html-recursive info-recursive install-data-recursive \
#>- 	install-dvi-recursive install-exec-recursive \
#>- 	install-html-recursive install-info-recursive \
#>- 	install-pdf-recursive install-ps-recursive install-recursive \
#>- 	installcheck-recursive installdirs-recursive pdf-recursive \
#>- 	ps-recursive uninstall-recursive
#>+ 7
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive nmcheck-recursive bcheck-recursive
configDATA_INSTALL = $(INSTALL_DATA)
kde_servicetypesDATA_INSTALL = $(INSTALL_DATA)
profiledataDATA_INSTALL = $(INSTALL_DATA)
protocolDATA_INSTALL = $(INSTALL_DATA)
rcDATA_INSTALL = $(INSTALL_DATA)
servicemenuDATA_INSTALL = $(INSTALL_DATA)
xdg_appsDATA_INSTALL = $(INSTALL_DATA)
DATA = $(config_DATA) $(kde_servicetypes_DATA) $(profiledata_DATA) \
	$(protocol_DATA) $(rc_DATA) $(servicemenu_DATA) \
	$(xdg_apps_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = amarokcore magnatunebrowser sqlite analyzers data \
	plugin images loader scripts themes vis metadata konquisidebar \
	statusbar . engine mediadevice device collectionscanner
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
ALSALIB_CFLAGS = @ALSALIB_CFLAGS@
ALSALIB_LIBS = @ALSALIB_LIBS@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CFLAGS_NMM = @CFLAGS_NMM@
CFLAGS_YAUAP = @CFLAGS_YAUAP@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DBUS_CFLAGS = @DBUS_CFLAGS@
DBUS_LIBS = @DBUS_LIBS@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DNSSD_LIBS = @DNSSD_LIBS@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
IFP_INCLUDES = @IFP_INCLUDES@
IFP_LIBS = @IFP_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LDFLAGS_NMM = @LDFLAGS_NMM@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBGPOD_CFLAGS = @LIBGPOD_CFLAGS@
LIBGPOD_LIBS = @LIBGPOD_LIBS@
LIBJPEG = @LIBJPEG@
LIBMTP_CFLAGS = @LIBMTP_CFLAGS@
LIBMTP_LIBS = @LIBMTP_LIBS@
LIBNJB_CFLAGS = @LIBNJB_CFLAGS@
LIBNJB_LIBS = @LIBNJB_LIBS@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBVISUAL_CFLAGS = @LIBVISUAL_CFLAGS@
LIBVISUAL_LIBS = @LIBVISUAL_LIBS@
LIBZ = @LIBZ@
LIB_ARTS = @LIB_ARTS@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_SQLITE = @LIB_SQLITE@
LIB_TUNEPIMP = @LIB_TUNEPIMP@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LIB_YAUAP = @LIB_YAUAP@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MP4V2_INCLUDES = @MP4V2_INCLUDES@
MP4V2_LIBS = @MP4V2_LIBS@
MSGFMT = @MSGFMT@
MYSQL_CONFIG = @MYSQL_CONFIG@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKGCONFIGFOUND = @PKGCONFIGFOUND@
PKG_CONFIG = @PKG_CONFIG@
POSTGRESQL_CONFIG = @POSTGRESQL_CONFIG@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
RUBY = @RUBY@
SDL_CONFIG = @SDL_CONFIG@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SQLITE_CFLAGS = @SQLITE_CFLAGS@
SQLITE_LIBS = @SQLITE_LIBS@
STRIP = @STRIP@
TAGLIB_CFLAGS = @TAGLIB_CFLAGS@
TAGLIB_LIBS = @TAGLIB_LIBS@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XINE_CFLAGS = @XINE_CFLAGS@
XINE_LIBS = @XINE_LIBS@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
gl_libs = @gl_libs@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
mysql_includes = @mysql_includes@
mysql_libs = @mysql_libs@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
postgresql_includes = @postgresql_includes@
postgresql_libs = @postgresql_libs@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
ruby_includes = @ruby_includes@
ruby_ldflags = @ruby_ldflags@
sbindir = @sbindir@
sdl_cflags = @sdl_cflags@
sdl_libs = @sdl_libs@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
@with_included_sqlite_TRUE@SQLITE_SUBDIR = sqlite
@with_included_sqlite_TRUE@LIB_SQLITE_LOCAL = $(top_builddir)/amarok/src/sqlite/libsqlite.la
@with_included_sqlite_TRUE@sqlite_includes = -I$(top_srcdir)/amarok/src/sqlite
@with_konqsidebar_TRUE@KONQSIDEBAR_SUBDIR = konquisidebar
lib_LTLIBRARIES = libamarok.la
SUBDIRS = \
    amarokcore \
    magnatunebrowser \
    $(SQLITE_SUBDIR) \
    analyzers \
    data \
    plugin \
    images \
    loader \
    scripts \
    themes \
    vis \
    metadata \
    $(KONQSIDEBAR_SUBDIR) \
    statusbar \
    . \
    engine \
    mediadevice \
    device \
    collectionscanner

INCLUDES = \
    -I$(top_builddir)/amarok/src/amarokcore \
    -I$(top_builddir)/amarok/src/magnatunebrowser \
    -I$(top_srcdir)/amarok/src/amarokcore \
    -I$(top_srcdir)/amarok/src/analyzers \
    -I$(top_srcdir)/amarok/src/plugin \
    -I$(top_srcdir)/amarok/src/statusbar \
    -I$(top_srcdir)/amarok/src/mediadevice \
    -I$(top_srcdir)/amarok/src/device \
    -I$(top_srcdir)/amarok/src \
    -I$(kde_includes)/arts \
    $(TAGLIB_CFLAGS) \
    $(sqlite_includes) \
    $(mysql_includes) \
    $(postgresql_includes) \
    $(EXSCALIBAR_CFLAGS) \
    $(all_includes)

#>- libamarok_la_SOURCES = \
#>-     Options1.ui \
#>-     Options1.ui.h \
#>-     Options2.ui \
#>-     Options4.ui \
#>-     Options5.ui \
#>-     Options7.ui \
#>-     Options8.ui \
#>-     actionclasses.cpp \
#>-     app.cpp \
#>-     atomicstring.cpp \
#>-     atomicurl.cpp \
#>-     browserbar.cpp \
#>-     clicklineedit.cpp \
#>-     collectionbrowser.cpp \
#>-     collectiondb.cpp \
#>-     columnlist.cpp \
#>-     configdialog.cpp \
#>-     contextbrowser.cpp \
#>-     coverfetcher.cpp \
#>-     covermanager.cpp \
#>-     cuefile.cpp \
#>-     dbsetup.ui  \
#>-     dbsetup.ui.h \
#>-     deletedialog.cpp \
#>-     deletedialogbase.ui \
#>-     deviceconfiguredialog.cpp \
#>-     devicemanager.cpp \
#>-     directorylist.cpp \
#>-     dynamicmode.cpp \
#>-     enginebase.cpp \
#>-     enginecontroller.cpp \
#>-     engineobserver.cpp \
#>-     equalizergraph.cpp \
#>-     equalizerpresetmanager.cpp \
#>-     equalizersetup.cpp \
#>-     expression.cpp \
#>-     fht.cpp \
#>-     filebrowser.cpp \
#>-     firstrunwizard.ui \
#>-     hintlineedit.cpp \
#>-     htmlview.cpp \
#>-     iconloader.cpp \
#>-     k3bexporter.cpp \
#>-     kbookmarkhandler.cpp \
#>-     ktrm.cpp \
#>-     lastfm.cpp \
#>-     mediabrowser.cpp \
#>-     mediadevicemanager.cpp \
#>-     medium.cpp \
#>-     mediumpluginmanager.cpp \
#>-     metabundle.cpp \
#>-     metabundlesaver.cpp \
#>-     moodbar.cpp \
#>-     mountpointmanager.cpp \
#>-     multitabbar.cpp \
#>-     mydiroperator.cpp \
#>-     newdynamic.ui \
#>-     organizecollectiondialog.ui \
#>-     osd.cpp \
#>-     pixmapviewer.cpp \
#>-     playerwindow.cpp \
#>-     playlist.cpp \
#>-     playlistbrowser.cpp \
#>-     playlistbrowseritem.cpp \
#>-     playlistitem.cpp \
#>-     playlistloader.cpp \
#>-     playlistselection.cpp \
#>-     playlistwindow.cpp \
#>-     pluginmanager.cpp \
#>-     podcastsettings.cpp \
#>-     podcastsettingsbase.ui \
#>-     prettypopupmenu.cpp \
#>-     queuemanager.cpp \
#>-     refreshimages.cpp \
#>-     scancontroller.cpp \
#>-     scriptmanager.cpp \
#>-     scriptmanagerbase.ui \
#>-     scrobbler.cpp \
#>-     sliderwidget.cpp \
#>-     smartplaylisteditor.cpp \
#>-     socketserver.cpp \
#>- 	starmanager.cpp \
#>-     statistics.cpp \
#>-     systray.cpp \
#>-     tagdialog.cpp \
#>-     tagdialogbase.ui \
#>-     tagguesser.cpp \
#>-     tagguesserconfigdialog.ui \
#>-     threadmanager.cpp \
#>-     tooltip.cpp \
#>-     trackpickerdialog.cpp \
#>-     trackpickerdialogbase.ui \
#>-     tracktooltip.cpp \
#>-     transferdialog.cpp \
#>-     xmlloader.cpp \
#>-     xspfplaylist.cpp \
#>-     editfilterdialog.cpp
#>+ 98
libamarok_la_SOURCES=\
     \
    Options1.ui.h \
     \
     \
     \
     \
     \
    actionclasses.cpp \
    app.cpp \
    atomicstring.cpp \
    atomicurl.cpp \
    browserbar.cpp \
    clicklineedit.cpp \
    collectionbrowser.cpp \
    collectiondb.cpp \
    columnlist.cpp \
    configdialog.cpp \
    contextbrowser.cpp \
    coverfetcher.cpp \
    covermanager.cpp \
    cuefile.cpp \
      \
    dbsetup.ui.h \
    deletedialog.cpp \
     \
    deviceconfiguredialog.cpp \
    devicemanager.cpp \
    directorylist.cpp \
    dynamicmode.cpp \
    enginebase.cpp \
    enginecontroller.cpp \
    engineobserver.cpp \
    equalizergraph.cpp \
    equalizerpresetmanager.cpp \
    equalizersetup.cpp \
    expression.cpp \
    fht.cpp \
    filebrowser.cpp \
     \
    hintlineedit.cpp \
    htmlview.cpp \
    iconloader.cpp \
    k3bexporter.cpp \
    kbookmarkhandler.cpp \
    ktrm.cpp \
    lastfm.cpp \
    mediabrowser.cpp \
    mediadevicemanager.cpp \
    medium.cpp \
    mediumpluginmanager.cpp \
    metabundle.cpp \
    metabundlesaver.cpp \
    moodbar.cpp \
    mountpointmanager.cpp \
    multitabbar.cpp \
    mydiroperator.cpp \
     \
     \
    osd.cpp \
    pixmapviewer.cpp \
    playerwindow.cpp \
    playlist.cpp \
    playlistbrowser.cpp \
    playlistbrowseritem.cpp \
    playlistitem.cpp \
    playlistloader.cpp \
    playlistselection.cpp \
    playlistwindow.cpp \
    pluginmanager.cpp \
    podcastsettings.cpp \
     \
    prettypopupmenu.cpp \
    queuemanager.cpp \
    refreshimages.cpp \
    scancontroller.cpp \
    scriptmanager.cpp \
     \
    scrobbler.cpp \
    sliderwidget.cpp \
    smartplaylisteditor.cpp \
    socketserver.cpp \
	starmanager.cpp \
    statistics.cpp \
    systray.cpp \
    tagdialog.cpp \
     \
    tagguesser.cpp \
     \
    threadmanager.cpp \
    tooltip.cpp \
    trackpickerdialog.cpp \
     \
    tracktooltip.cpp \
    transferdialog.cpp \
    xmlloader.cpp \
    xspfplaylist.cpp \
    editfilterdialog.cpp Options1.cpp Options2.cpp Options4.cpp Options5.cpp Options7.cpp Options8.cpp dbsetup.cpp deletedialogbase.cpp firstrunwizard.cpp newdynamic.cpp organizecollectiondialog.cpp podcastsettingsbase.cpp scriptmanagerbase.cpp tagdialogbase.cpp tagguesserconfigdialog.cpp trackpickerdialogbase.cpp

libamarok_la_LIBADD = \
    $(top_builddir)/amarok/src/amarokcore/libamarokcore.la \
    $(top_builddir)/amarok/src/analyzers/libanalyzers.la \
    $(top_builddir)/amarok/src/plugin/libplugin.la \
    $(top_builddir)/amarok/src/statusbar/libstatusbar.la \
    $(top_builddir)/amarok/src/metadata/libmetadata.la \
    $(top_builddir)/amarok/src/magnatunebrowser/libmagnatunebrowser.la \
    $(LIB_KUTILS) $(LIB_KFILE) $(LIB_KDEUI) $(LIB_KDECORE) $(LIB_KHTML) $(LIB_KNEWSTUFF) \
    $(TAGLIB_LIBS) $(gl_libs) $(LIB_SQLITE) $(LIB_SQLITE_LOCAL) \
    $(LIB_TUNEPIMP) \
    $(mysql_libs) \
    $(postgresql_libs)

libamarok_la_LDFLAGS = \
    $(all_libraries) \
    $(KDE_RPATH)

#>- METASOURCES = \
#>-     AUTO

KDE_ICON = \
    AUTO

bin_SCRIPTS = amarok_proxy.rb
# atomicstring_unittest is excluded from the build by default to avoid compile slowdowns.
# If you intend to do work in this area and want to build it, comment the line above and
# uncomment the lines below:
#bin_PROGRAMS = amarokapp atomicstring_unittest
#atomicstring_unittest_SOURCES = atomicstring_unittest.cpp atomicstring.h
#atomicstring_unittest_LDADD = atomicstring.$(OBJEXT) $(LIB_KDECORE)
amarokapp_SOURCES = main.cpp
amarokapp_LDADD = \
    $(top_builddir)/amarok/src/amarokcore/libamarokcore.la \
    libamarok.la \
    $(top_builddir)/amarok/src/analyzers/libanalyzers.la \
    $(top_builddir)/amarok/src/plugin/libplugin.la \
    $(top_builddir)/amarok/src/statusbar/libstatusbar.la \
    $(top_builddir)/amarok/src/metadata/libmetadata.la \
    $(LIB_KUTILS) $(LIB_KFILE) $(LIB_KDEUI) $(LIB_KDECORE) $(LIB_KHTML) $(LIB_KNEWSTUFF) \
    $(TAGLIB_LIBS) $(gl_libs) $(LIB_SQLITE) $(LIB_SQLITE_LOCAL) $(EXSCALIBAR_LIBS) \
    $(LIB_TUNEPIMP) \
    $(mysql_libs) \
    $(postgresql_libs)

amarokapp_LDFLAGS = \
    $(all_libraries) \
    $(KDE_RPATH)

rcdir = \
    $(kde_datadir)/amarok

rc_DATA = \
    amarokui.rc

configdir = \
    $(kde_confdir)

config_DATA = \
    amarokrc

xdg_apps_DATA = \
    amarok.desktop

kde_servicetypes_DATA = \
    amarok_plugin.desktop \
    amarok_codecinstall.desktop

servicemenudir = \
    $(kde_datadir)/konqueror/servicemenus

servicemenu_DATA = \
    amarok_addaspodcast.desktop \
    amarok_append.desktop \
    amarok_play_audiocd.desktop

profiledatadir = \
    $(kde_datadir)/profiles

profiledata_DATA = \
    amarok.profile.xml

protocoldir = \
    $(kde_servicesdir)

protocol_DATA = \
    amarokitpc.protocol \
    amaroklastfm.protocol \
    amarokpcast.protocol

#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  amarok/src/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  amarok/src/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  amarok/src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  amarok/src/Makefile
	cd $(top_srcdir) && perl admin/am_edit amarok/src/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libamarok.la: $(libamarok_la_OBJECTS) $(libamarok_la_DEPENDENCIES) 
	$(libamarok_la_LINK) -rpath $(libdir) $(libamarok_la_OBJECTS) $(libamarok_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
amarokapp$(EXEEXT): $(amarokapp_OBJECTS) $(amarokapp_DEPENDENCIES) 
	@rm -f amarokapp$(EXEEXT)
	$(amarokapp_LINK) $(amarokapp_OBJECTS) $(amarokapp_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(binSCRIPT_INSTALL) '$$d$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	    $(binSCRIPT_INSTALL) "$$d$$p" "$(DESTDIR)$(bindir)/$$f"; \
	  else :; fi; \
	done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/actionclasses.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/app.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atomicstring.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atomicurl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/browserbar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clicklineedit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collectionbrowser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collectiondb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/columnlist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configdialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/contextbrowser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/coverfetcher.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/covermanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cuefile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/deletedialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/deviceconfiguredialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/devicemanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/directorylist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynamicmode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/editfilterdialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/enginebase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/enginecontroller.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/engineobserver.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/equalizergraph.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/equalizerpresetmanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/equalizersetup.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/expression.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fht.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filebrowser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hintlineedit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/htmlview.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iconloader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/k3bexporter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kbookmarkhandler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ktrm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lastfm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mediabrowser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mediadevicemanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/medium.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mediumpluginmanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/metabundle.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/metabundlesaver.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/moodbar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mountpointmanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multitabbar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mydiroperator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/osd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pixmapviewer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playerwindow.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlistbrowser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlistbrowseritem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlistitem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlistloader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlistselection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlistwindow.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pluginmanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/podcastsettings.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prettypopupmenu.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/queuemanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/refreshimages.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scancontroller.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scriptmanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scrobbler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sliderwidget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/smartplaylisteditor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/socketserver.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/starmanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/statistics.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/systray.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagdialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagguesser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/threadmanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tooltip.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trackpickerdialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tracktooltip.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/transferdialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xmlloader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xspfplaylist.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-configDATA: $(config_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(configdir)" || $(MKDIR_P) "$(DESTDIR)$(configdir)"
	@list='$(config_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(configDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(configdir)/$$f'"; \
	  $(configDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(configdir)/$$f"; \
	done

uninstall-configDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(config_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(configdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(configdir)/$$f"; \
	done
install-kde_servicetypesDATA: $(kde_servicetypes_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(kde_servicetypesdir)" || $(MKDIR_P) "$(DESTDIR)$(kde_servicetypesdir)"
	@list='$(kde_servicetypes_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(kde_servicetypesDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(kde_servicetypesdir)/$$f'"; \
	  $(kde_servicetypesDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(kde_servicetypesdir)/$$f"; \
	done

uninstall-kde_servicetypesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kde_servicetypes_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(kde_servicetypesdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(kde_servicetypesdir)/$$f"; \
	done
install-profiledataDATA: $(profiledata_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(profiledatadir)" || $(MKDIR_P) "$(DESTDIR)$(profiledatadir)"
	@list='$(profiledata_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(profiledataDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(profiledatadir)/$$f'"; \
	  $(profiledataDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(profiledatadir)/$$f"; \
	done

uninstall-profiledataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(profiledata_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(profiledatadir)/$$f'"; \
	  rm -f "$(DESTDIR)$(profiledatadir)/$$f"; \
	done
install-protocolDATA: $(protocol_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(protocoldir)" || $(MKDIR_P) "$(DESTDIR)$(protocoldir)"
	@list='$(protocol_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(protocolDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(protocoldir)/$$f'"; \
	  $(protocolDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(protocoldir)/$$f"; \
	done

uninstall-protocolDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(protocol_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(protocoldir)/$$f'"; \
	  rm -f "$(DESTDIR)$(protocoldir)/$$f"; \
	done
install-rcDATA: $(rc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(rcdir)" || $(MKDIR_P) "$(DESTDIR)$(rcdir)"
	@list='$(rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(rcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(rcdir)/$$f'"; \
	  $(rcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(rcdir)/$$f"; \
	done

uninstall-rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(rc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(rcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(rcdir)/$$f"; \
	done
install-servicemenuDATA: $(servicemenu_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(servicemenudir)" || $(MKDIR_P) "$(DESTDIR)$(servicemenudir)"
	@list='$(servicemenu_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(servicemenuDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(servicemenudir)/$$f'"; \
	  $(servicemenuDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(servicemenudir)/$$f"; \
	done

uninstall-servicemenuDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(servicemenu_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(servicemenudir)/$$f'"; \
	  rm -f "$(DESTDIR)$(servicemenudir)/$$f"; \
	done
install-xdg_appsDATA: $(xdg_apps_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xdg_appsdir)" || $(MKDIR_P) "$(DESTDIR)$(xdg_appsdir)"
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(xdg_appsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  $(xdg_appsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

uninstall-xdg_appsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(DATA)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(configdir)" "$(DESTDIR)$(kde_servicetypesdir)" "$(DESTDIR)$(profiledatadir)" "$(DESTDIR)$(protocoldir)" "$(DESTDIR)$(rcdir)" "$(DESTDIR)$(servicemenudir)" "$(DESTDIR)$(xdg_appsdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
#>- 	clean-libtool mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

#>- install-data-am: install-configDATA install-kde_servicetypesDATA \
#>- 	install-profiledataDATA install-protocolDATA install-rcDATA \
#>- 	install-servicemenuDATA install-xdg_appsDATA
#>+ 3
install-data-am: install-kde-icons  install-configDATA install-kde_servicetypesDATA \
	install-profiledataDATA install-protocolDATA install-rcDATA \
	install-servicemenuDATA install-xdg_appsDATA

install-dvi: install-dvi-recursive

install-exec-am: install-binPROGRAMS install-binSCRIPTS \
	install-libLTLIBRARIES
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

#>- uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
#>- 	uninstall-configDATA uninstall-kde_servicetypesDATA \
#>- 	uninstall-libLTLIBRARIES uninstall-profiledataDATA \
#>- 	uninstall-protocolDATA uninstall-rcDATA \
#>- 	uninstall-servicemenuDATA uninstall-xdg_appsDATA
#>+ 5
uninstall-am: uninstall-kde-icons  uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-configDATA uninstall-kde_servicetypesDATA \
	uninstall-libLTLIBRARIES uninstall-profiledataDATA \
	uninstall-protocolDATA uninstall-rcDATA \
	uninstall-servicemenuDATA uninstall-xdg_appsDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-exec-am install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-binSCRIPTS install-configDATA install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-exec-hook install-html install-html-am \
	install-info install-info-am install-kde_servicetypesDATA \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-profiledataDATA install-protocolDATA install-ps \
	install-ps-am install-rcDATA install-servicemenuDATA \
	install-strip install-xdg_appsDATA installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-configDATA uninstall-kde_servicetypesDATA \
	uninstall-libLTLIBRARIES uninstall-profiledataDATA \
	uninstall-protocolDATA uninstall-rcDATA \
	uninstall-servicemenuDATA uninstall-xdg_appsDATA


messages: rc.cpp
	$(EXTRACTRC) `find . -name "*.rc" -o -name "*.ui" -o -name "*.kcfg"` > rc.cpp
	LIST=`find . -name \*.h -o -name \*.hh -o -name \*.H -o -name \*.hxx -o -name \*.hpp -o -name \*.cpp -o -name \*.cc -o -name \*.cxx -o -name \*.ecpp -o -name \*.C`; \
	if test -n "$$LIST"; then \
		$(XGETTEXT) $$LIST -o $(podir)/amarok.pot; \
	fi

install-exec-hook:
	@echo ""
	@echo "=========================="
	@echo "=  Amarok - INSTALLED  ================================"
	@echo "=========================="
	@echo "="
	@echo "=  Type amarok to start!"
	@echo "="
	@echo "=  If you have problems, please consult the README;"
	@echo "=  if the problems continue join us on #amarok."
	@echo "="
	@echo "======================================================="
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
browserbar.moc: $(srcdir)/browserbar.h
	$(MOC) $(srcdir)/browserbar.h -o browserbar.moc

#>+ 2
mocs: browserbar.moc

#>+ 3
playlistbrowser.moc: $(srcdir)/playlistbrowser.h
	$(MOC) $(srcdir)/playlistbrowser.h -o playlistbrowser.moc

#>+ 2
mocs: playlistbrowser.moc

#>+ 3
statistics.moc: $(srcdir)/statistics.h
	$(MOC) $(srcdir)/statistics.h -o statistics.moc

#>+ 2
mocs: statistics.moc

#>+ 3
hintlineedit.moc: $(srcdir)/hintlineedit.h
	$(MOC) $(srcdir)/hintlineedit.h -o hintlineedit.moc

#>+ 2
mocs: hintlineedit.moc

#>+ 3
mediabrowser.moc: $(srcdir)/mediabrowser.h
	$(MOC) $(srcdir)/mediabrowser.h -o mediabrowser.moc

#>+ 2
mocs: mediabrowser.moc

#>+ 3
moodbar.moc: $(srcdir)/moodbar.h
	$(MOC) $(srcdir)/moodbar.h -o moodbar.moc

#>+ 2
mocs: moodbar.moc

#>+ 3
devicemanager.moc: $(srcdir)/devicemanager.h
	$(MOC) $(srcdir)/devicemanager.h -o devicemanager.moc

#>+ 2
mocs: devicemanager.moc

#>+ 3
refreshimages.moc: $(srcdir)/refreshimages.h
	$(MOC) $(srcdir)/refreshimages.h -o refreshimages.moc

#>+ 2
mocs: refreshimages.moc

#>+ 3
app.moc: $(srcdir)/app.h
	$(MOC) $(srcdir)/app.h -o app.moc

#>+ 2
mocs: app.moc

#>+ 3
prettypopupmenu.moc: $(srcdir)/prettypopupmenu.h
	$(MOC) $(srcdir)/prettypopupmenu.h -o prettypopupmenu.moc

#>+ 2
mocs: prettypopupmenu.moc

#>+ 3
transferdialog.moc: $(srcdir)/transferdialog.h
	$(MOC) $(srcdir)/transferdialog.h -o transferdialog.moc

#>+ 2
mocs: transferdialog.moc

#>+ 3
editfilterdialog.moc: $(srcdir)/editfilterdialog.h
	$(MOC) $(srcdir)/editfilterdialog.h -o editfilterdialog.moc

#>+ 2
mocs: editfilterdialog.moc

#>+ 3
metabundlesaver.moc: $(srcdir)/metabundlesaver.h
	$(MOC) $(srcdir)/metabundlesaver.h -o metabundlesaver.moc

#>+ 2
mocs: metabundlesaver.moc

#>+ 3
starmanager.moc: $(srcdir)/starmanager.h
	$(MOC) $(srcdir)/starmanager.h -o starmanager.moc

#>+ 2
mocs: starmanager.moc

#>+ 3
socketserver.moc: $(srcdir)/socketserver.h
	$(MOC) $(srcdir)/socketserver.h -o socketserver.moc

#>+ 2
mocs: socketserver.moc

#>+ 3
playlistselection.moc: $(srcdir)/playlistselection.h
	$(MOC) $(srcdir)/playlistselection.h -o playlistselection.moc

#>+ 2
mocs: playlistselection.moc

#>+ 3
scancontroller.moc: $(srcdir)/scancontroller.h
	$(MOC) $(srcdir)/scancontroller.h -o scancontroller.moc

#>+ 2
mocs: scancontroller.moc

#>+ 3
equalizerpresetmanager.moc: $(srcdir)/equalizerpresetmanager.h
	$(MOC) $(srcdir)/equalizerpresetmanager.h -o equalizerpresetmanager.moc

#>+ 2
mocs: equalizerpresetmanager.moc

#>+ 3
collectiondb.moc: $(srcdir)/collectiondb.h
	$(MOC) $(srcdir)/collectiondb.h -o collectiondb.moc

#>+ 2
mocs: collectiondb.moc

#>+ 3
deviceconfiguredialog.moc: $(srcdir)/deviceconfiguredialog.h
	$(MOC) $(srcdir)/deviceconfiguredialog.h -o deviceconfiguredialog.moc

#>+ 2
mocs: deviceconfiguredialog.moc

#>+ 3
xmlloader_p.moc: $(srcdir)/xmlloader_p.h
	$(MOC) $(srcdir)/xmlloader_p.h -o xmlloader_p.moc

#>+ 2
mocs: xmlloader_p.moc

#>+ 3
multitabbar.moc: $(srcdir)/multitabbar.h
	$(MOC) $(srcdir)/multitabbar.h -o multitabbar.moc

#>+ 2
mocs: multitabbar.moc

#>+ 3
multitabbar_p.moc: $(srcdir)/multitabbar_p.h
	$(MOC) $(srcdir)/multitabbar_p.h -o multitabbar_p.moc

#>+ 2
mocs: multitabbar_p.moc

#>+ 3
cuefile.moc: $(srcdir)/cuefile.h
	$(MOC) $(srcdir)/cuefile.h -o cuefile.moc

#>+ 2
mocs: cuefile.moc

#>+ 3
mediadevicemanager.moc: $(srcdir)/mediadevicemanager.h
	$(MOC) $(srcdir)/mediadevicemanager.h -o mediadevicemanager.moc

#>+ 2
mocs: mediadevicemanager.moc

#>+ 3
deletedialog.moc: $(srcdir)/deletedialog.h
	$(MOC) $(srcdir)/deletedialog.h -o deletedialog.moc

#>+ 2
mocs: deletedialog.moc

#>+ 3
ktrm.moc: $(srcdir)/ktrm.h
	$(MOC) $(srcdir)/ktrm.h -o ktrm.moc

#>+ 2
mocs: ktrm.moc

#>+ 3
directorylist.moc: $(srcdir)/directorylist.h
	$(MOC) $(srcdir)/directorylist.h -o directorylist.moc

#>+ 2
mocs: directorylist.moc

#>+ 3
mediumpluginmanager.moc: $(srcdir)/mediumpluginmanager.h
	$(MOC) $(srcdir)/mediumpluginmanager.h -o mediumpluginmanager.moc

#>+ 2
mocs: mediumpluginmanager.moc

#>+ 3
enginecontroller.moc: $(srcdir)/enginecontroller.h
	$(MOC) $(srcdir)/enginecontroller.h -o enginecontroller.moc

#>+ 2
mocs: enginecontroller.moc

#>+ 3
tagdialog.moc: $(srcdir)/tagdialog.h
	$(MOC) $(srcdir)/tagdialog.h -o tagdialog.moc

#>+ 2
mocs: tagdialog.moc

#>+ 3
collectionbrowser.moc: $(srcdir)/collectionbrowser.h
	$(MOC) $(srcdir)/collectionbrowser.h -o collectionbrowser.moc

#>+ 2
mocs: collectionbrowser.moc

#>+ 3
xmlloader.moc: $(srcdir)/xmlloader.h
	$(MOC) $(srcdir)/xmlloader.h -o xmlloader.moc

#>+ 2
mocs: xmlloader.moc

#>+ 3
contextbrowser.moc: $(srcdir)/contextbrowser.h
	$(MOC) $(srcdir)/contextbrowser.h -o contextbrowser.moc

#>+ 2
mocs: contextbrowser.moc

#>+ 3
playlistbrowseritem.moc: $(srcdir)/playlistbrowseritem.h
	$(MOC) $(srcdir)/playlistbrowseritem.h -o playlistbrowseritem.moc

#>+ 2
mocs: playlistbrowseritem.moc

#>+ 3
smartplaylisteditor.moc: $(srcdir)/smartplaylisteditor.h
	$(MOC) $(srcdir)/smartplaylisteditor.h -o smartplaylisteditor.moc

#>+ 2
mocs: smartplaylisteditor.moc

#>+ 3
htmlview.moc: $(srcdir)/htmlview.h
	$(MOC) $(srcdir)/htmlview.h -o htmlview.moc

#>+ 2
mocs: htmlview.moc

#>+ 3
mydiroperator.moc: $(srcdir)/mydiroperator.h
	$(MOC) $(srcdir)/mydiroperator.h -o mydiroperator.moc

#>+ 2
mocs: mydiroperator.moc

#>+ 3
podcastsettings.moc: $(srcdir)/podcastsettings.h
	$(MOC) $(srcdir)/podcastsettings.h -o podcastsettings.moc

#>+ 2
mocs: podcastsettings.moc

#>+ 3
mountpointmanager.moc: $(srcdir)/mountpointmanager.h
	$(MOC) $(srcdir)/mountpointmanager.h -o mountpointmanager.moc

#>+ 2
mocs: mountpointmanager.moc

#>+ 3
actionclasses.moc: $(srcdir)/actionclasses.h
	$(MOC) $(srcdir)/actionclasses.h -o actionclasses.moc

#>+ 2
mocs: actionclasses.moc

#>+ 3
filebrowser.moc: $(srcdir)/filebrowser.h
	$(MOC) $(srcdir)/filebrowser.h -o filebrowser.moc

#>+ 2
mocs: filebrowser.moc

#>+ 3
columnlist.moc: $(srcdir)/columnlist.h
	$(MOC) $(srcdir)/columnlist.h -o columnlist.moc

#>+ 2
mocs: columnlist.moc

#>+ 3
scrobbler.moc: $(srcdir)/scrobbler.h
	$(MOC) $(srcdir)/scrobbler.h -o scrobbler.moc

#>+ 2
mocs: scrobbler.moc

#>+ 3
osd.moc: $(srcdir)/osd.h
	$(MOC) $(srcdir)/osd.h -o osd.moc

#>+ 2
mocs: osd.moc

#>+ 3
scriptmanager.moc: $(srcdir)/scriptmanager.h
	$(MOC) $(srcdir)/scriptmanager.h -o scriptmanager.moc

#>+ 2
mocs: scriptmanager.moc

#>+ 3
threadmanager.moc: $(srcdir)/threadmanager.h
	$(MOC) $(srcdir)/threadmanager.h -o threadmanager.moc

#>+ 2
mocs: threadmanager.moc

#>+ 3
configdialog.moc: $(srcdir)/configdialog.h
	$(MOC) $(srcdir)/configdialog.h -o configdialog.moc

#>+ 2
mocs: configdialog.moc

#>+ 3
equalizersetup.moc: $(srcdir)/equalizersetup.h
	$(MOC) $(srcdir)/equalizersetup.h -o equalizersetup.moc

#>+ 2
mocs: equalizersetup.moc

#>+ 3
playlistwindow.moc: $(srcdir)/playlistwindow.h
	$(MOC) $(srcdir)/playlistwindow.h -o playlistwindow.moc

#>+ 2
mocs: playlistwindow.moc

#>+ 3
tooltip.moc: $(srcdir)/tooltip.h
	$(MOC) $(srcdir)/tooltip.h -o tooltip.moc

#>+ 2
mocs: tooltip.moc

#>+ 3
tracktooltip.moc: $(srcdir)/tracktooltip.h
	$(MOC) $(srcdir)/tracktooltip.h -o tracktooltip.moc

#>+ 2
mocs: tracktooltip.moc

#>+ 3
clicklineedit.moc: $(srcdir)/clicklineedit.h
	$(MOC) $(srcdir)/clicklineedit.h -o clicklineedit.moc

#>+ 2
mocs: clicklineedit.moc

#>+ 3
playlistloader.moc: $(srcdir)/playlistloader.h
	$(MOC) $(srcdir)/playlistloader.h -o playlistloader.moc

#>+ 2
mocs: playlistloader.moc

#>+ 3
queuemanager.moc: $(srcdir)/queuemanager.h
	$(MOC) $(srcdir)/queuemanager.h -o queuemanager.moc

#>+ 2
mocs: queuemanager.moc

#>+ 3
playlist.moc: $(srcdir)/playlist.h
	$(MOC) $(srcdir)/playlist.h -o playlist.moc

#>+ 2
mocs: playlist.moc

#>+ 3
covermanager.moc: $(srcdir)/covermanager.h
	$(MOC) $(srcdir)/covermanager.h -o covermanager.moc

#>+ 2
mocs: covermanager.moc

#>+ 3
trackpickerdialog.moc: $(srcdir)/trackpickerdialog.h
	$(MOC) $(srcdir)/trackpickerdialog.h -o trackpickerdialog.moc

#>+ 2
mocs: trackpickerdialog.moc

#>+ 3
playerwindow.moc: $(srcdir)/playerwindow.h
	$(MOC) $(srcdir)/playerwindow.h -o playerwindow.moc

#>+ 2
mocs: playerwindow.moc

#>+ 3
lastfm.moc: $(srcdir)/lastfm.h
	$(MOC) $(srcdir)/lastfm.h -o lastfm.moc

#>+ 2
mocs: lastfm.moc

#>+ 3
pixmapviewer.moc: $(srcdir)/pixmapviewer.h
	$(MOC) $(srcdir)/pixmapviewer.h -o pixmapviewer.moc

#>+ 2
mocs: pixmapviewer.moc

#>+ 3
enginebase.moc: $(srcdir)/enginebase.h
	$(MOC) $(srcdir)/enginebase.h -o enginebase.moc

#>+ 2
mocs: enginebase.moc

#>+ 3
coverfetcher.moc: $(srcdir)/coverfetcher.h
	$(MOC) $(srcdir)/coverfetcher.h -o coverfetcher.moc

#>+ 2
mocs: coverfetcher.moc

#>+ 3
sliderwidget.moc: $(srcdir)/sliderwidget.h
	$(MOC) $(srcdir)/sliderwidget.h -o sliderwidget.moc

#>+ 2
mocs: sliderwidget.moc

#>+ 3
clean-metasources:
	-rm -f  browserbar.moc playlistbrowser.moc statistics.moc hintlineedit.moc mediabrowser.moc moodbar.moc devicemanager.moc refreshimages.moc app.moc prettypopupmenu.moc transferdialog.moc editfilterdialog.moc metabundlesaver.moc starmanager.moc socketserver.moc playlistselection.moc scancontroller.moc equalizerpresetmanager.moc collectiondb.moc deviceconfiguredialog.moc xmlloader_p.moc multitabbar.moc multitabbar_p.moc cuefile.moc mediadevicemanager.moc deletedialog.moc ktrm.moc directorylist.moc mediumpluginmanager.moc enginecontroller.moc tagdialog.moc collectionbrowser.moc xmlloader.moc contextbrowser.moc playlistbrowseritem.moc smartplaylisteditor.moc htmlview.moc mydiroperator.moc podcastsettings.moc mountpointmanager.moc actionclasses.moc filebrowser.moc columnlist.moc scrobbler.moc osd.moc scriptmanager.moc threadmanager.moc configdialog.moc equalizersetup.moc playlistwindow.moc tooltip.moc tracktooltip.moc clicklineedit.moc playlistloader.moc queuemanager.moc playlist.moc covermanager.moc trackpickerdialog.moc playerwindow.moc lastfm.moc pixmapviewer.moc enginebase.moc coverfetcher.moc sliderwidget.moc

#>+ 2
KDE_DIST=firstrunwizard.ui amarokui_xmms.rc playlistbrowser.h equalizersetup.h refreshimages.h Options2.ui Options5.ui.h trackpickerdialogbase.ui pixmapviewer.h amarok.desktop podcastsettings.h amarok_codecinstall.desktop transferdialog.h mydiroperator.h amarok_addaspodcast.desktop ktrm.h Options4.ui mediadevicemanager.h statistics.h playlistwindow.h amarok.h scriptmanager.h playlistloader.h playlistbrowseritem.h medium.h Options7.ui engineobserver.h hintlineedit.h tagguesserconfigdialog.ui editfilterdialog.h socketserver.h playerwindow.h deletedialogbase.ui hi22-app-amarok.png xmlloader.h Options8.ui queuemanager.h tracktooltip.h tagguesser.h collectionbrowser.h mountpointmanager.h hi128-app-amarok.png browserbar.h newdynamic.ui moodbar.h collectiondb.h playlistitem.h contextbrowser.h enginebase.h amarok_append.desktop playlistselection.h deviceconfiguredialog.h amarok_proxy.rb directorylist.h osd.h debug.h amarok_play_audiocd.desktop hi64-app-amarok.png scrobbler.h qstringx.h Makefile.in amarokpcast.protocol tagdialog.h amarokrc organizecollectiondialog.ui.h organizecollectiondialog.ui lastfm.h xmlloader_p.h starmanager.h pluginmanager.h systray.h enginecontroller.h firstrunwizard.ui.h amarok.profile.xml cuefile.h bcpp.cfg tagdialogbase.ui.h amarok_export.h amaroklastfm.protocol mydirlister.h smartplaylisteditor.h hi32-app-amarok.png tagdialogbase.ui sliderwidget.h tooltip.h actionclasses.h atomicurl.h expression.h Options2.ui.h hi48-app-amarok.png fht.h dynamicmode.h columnlist.h filebrowser.h podcastbundle.h clicklineedit.h xspfplaylist.h equalizergraph.h multitabbar_p.h colorgenerator.h threadmanager.h scriptmanagerbase.ui k3bexporter.h engine_fwd.h playlist.h devicemanager.h multitabbar.h metabundle.h amarok_plugin.desktop amarokui.rc prettypopupmenu.h htmlview.h configdialog.h browserToolBar.h hi16-app-amarok.png podcastsettingsbase.ui dbsetup.ui app.h tagguesserconfigdialog.ui.h deletedialog.h covermanager.h Options1.ui scancontroller.h amarokitpc.protocol kbookmarkhandler.h mediumpluginmanager.h metabundlesaver.h Options8.ui.h mediabrowser.h trackpickerdialog.h equalizerpresetmanager.h tdebug.h Options5.ui Makefile.am coverfetcher.h 

#>+ 19
clean-ui:
	-rm -f \
	Options1.cpp Options1.h Options1.moc \
	Options2.cpp Options2.h Options2.moc \
	Options4.cpp Options4.h Options4.moc \
	Options5.cpp Options5.h Options5.moc \
	Options7.cpp Options7.h Options7.moc \
	Options8.cpp Options8.h Options8.moc \
	dbsetup.cpp dbsetup.h dbsetup.moc \
	deletedialogbase.cpp deletedialogbase.h deletedialogbase.moc \
	firstrunwizard.cpp firstrunwizard.h firstrunwizard.moc \
	newdynamic.cpp newdynamic.h newdynamic.moc \
	organizecollectiondialog.cpp organizecollectiondialog.h organizecollectiondialog.moc \
	podcastsettingsbase.cpp podcastsettingsbase.h podcastsettingsbase.moc \
	scriptmanagerbase.cpp scriptmanagerbase.h scriptmanagerbase.moc \
	tagdialogbase.cpp tagdialogbase.h tagdialogbase.moc \
	tagguesserconfigdialog.cpp tagguesserconfigdialog.h tagguesserconfigdialog.moc \
	trackpickerdialogbase.cpp trackpickerdialogbase.h trackpickerdialogbase.moc 

#>+ 2
docs-am:

#>+ 22
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/hi16-app-amarok.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/amarok.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps
	$(INSTALL_DATA) $(srcdir)/hi64-app-amarok.png $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps/amarok.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps
	$(INSTALL_DATA) $(srcdir)/hi22-app-amarok.png $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/amarok.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps
	$(INSTALL_DATA) $(srcdir)/hi48-app-amarok.png $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/amarok.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps
	$(INSTALL_DATA) $(srcdir)/hi128-app-amarok.png $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps/amarok.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-amarok.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/amarok.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/amarok.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps/amarok.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/amarok.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/amarok.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps/amarok.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/amarok.png

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  amarok/src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  amarok/src/Makefile
	cd $(top_srcdir) && perl admin/am_edit amarok/src/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
libamarok_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/actionclasses.cpp $(srcdir)/app.cpp $(srcdir)/atomicstring.cpp $(srcdir)/atomicurl.cpp $(srcdir)/browserbar.cpp $(srcdir)/clicklineedit.cpp $(srcdir)/collectionbrowser.cpp $(srcdir)/collectiondb.cpp $(srcdir)/columnlist.cpp $(srcdir)/configdialog.cpp $(srcdir)/contextbrowser.cpp $(srcdir)/coverfetcher.cpp $(srcdir)/covermanager.cpp $(srcdir)/cuefile.cpp $(srcdir)/deletedialog.cpp $(srcdir)/deviceconfiguredialog.cpp $(srcdir)/devicemanager.cpp $(srcdir)/directorylist.cpp $(srcdir)/dynamicmode.cpp $(srcdir)/enginebase.cpp $(srcdir)/enginecontroller.cpp $(srcdir)/engineobserver.cpp $(srcdir)/equalizergraph.cpp $(srcdir)/equalizerpresetmanager.cpp $(srcdir)/equalizersetup.cpp $(srcdir)/expression.cpp $(srcdir)/fht.cpp $(srcdir)/filebrowser.cpp $(srcdir)/hintlineedit.cpp $(srcdir)/htmlview.cpp $(srcdir)/iconloader.cpp $(srcdir)/k3bexporter.cpp $(srcdir)/kbookmarkhandler.cpp $(srcdir)/ktrm.cpp $(srcdir)/lastfm.cpp $(srcdir)/mediabrowser.cpp $(srcdir)/mediadevicemanager.cpp $(srcdir)/medium.cpp $(srcdir)/mediumpluginmanager.cpp $(srcdir)/metabundle.cpp $(srcdir)/metabundlesaver.cpp $(srcdir)/moodbar.cpp $(srcdir)/mountpointmanager.cpp $(srcdir)/multitabbar.cpp $(srcdir)/mydiroperator.cpp $(srcdir)/osd.cpp $(srcdir)/pixmapviewer.cpp $(srcdir)/playerwindow.cpp $(srcdir)/playlist.cpp $(srcdir)/playlistbrowser.cpp $(srcdir)/playlistbrowseritem.cpp $(srcdir)/playlistitem.cpp $(srcdir)/playlistloader.cpp $(srcdir)/playlistselection.cpp $(srcdir)/playlistwindow.cpp $(srcdir)/pluginmanager.cpp $(srcdir)/podcastsettings.cpp $(srcdir)/prettypopupmenu.cpp $(srcdir)/queuemanager.cpp $(srcdir)/refreshimages.cpp $(srcdir)/scancontroller.cpp $(srcdir)/scriptmanager.cpp $(srcdir)/scrobbler.cpp $(srcdir)/sliderwidget.cpp $(srcdir)/smartplaylisteditor.cpp $(srcdir)/socketserver.cpp $(srcdir)/starmanager.cpp $(srcdir)/statistics.cpp $(srcdir)/systray.cpp $(srcdir)/tagdialog.cpp $(srcdir)/tagguesser.cpp $(srcdir)/threadmanager.cpp $(srcdir)/tooltip.cpp $(srcdir)/trackpickerdialog.cpp $(srcdir)/tracktooltip.cpp $(srcdir)/transferdialog.cpp $(srcdir)/xmlloader.cpp $(srcdir)/xspfplaylist.cpp $(srcdir)/editfilterdialog.cpp Options1.cpp Options2.cpp Options4.cpp Options5.cpp Options7.cpp Options8.cpp dbsetup.cpp deletedialogbase.cpp firstrunwizard.cpp newdynamic.cpp organizecollectiondialog.cpp podcastsettingsbase.cpp scriptmanagerbase.cpp tagdialogbase.cpp tagguesserconfigdialog.cpp trackpickerdialogbase.cpp  playlistbrowser.moc browserbar.moc statistics.moc firstrunwizard.moc hintlineedit.moc moodbar.moc mediabrowser.moc trackpickerdialogbase.moc tagguesserconfigdialog.moc Options2.moc app.moc refreshimages.moc devicemanager.moc Options4.moc prettypopupmenu.moc deletedialogbase.moc Options5.moc Options7.moc transferdialog.moc editfilterdialog.moc metabundlesaver.moc starmanager.moc socketserver.moc playlistselection.moc scancontroller.moc deviceconfiguredialog.moc collectiondb.moc equalizerpresetmanager.moc xmlloader_p.moc tagdialogbase.moc multitabbar.moc multitabbar_p.moc scriptmanagerbase.moc cuefile.moc Options8.moc mediadevicemanager.moc deletedialog.moc ktrm.moc directorylist.moc mediumpluginmanager.moc newdynamic.moc enginecontroller.moc tagdialog.moc dbsetup.moc collectionbrowser.moc xmlloader.moc contextbrowser.moc podcastsettingsbase.moc playlistbrowseritem.moc organizecollectiondialog.moc smartplaylisteditor.moc htmlview.moc mydiroperator.moc podcastsettings.moc mountpointmanager.moc actionclasses.moc filebrowser.moc columnlist.moc Options1.moc scrobbler.moc osd.moc scriptmanager.moc threadmanager.moc configdialog.moc equalizersetup.moc playlistwindow.moc tooltip.moc tracktooltip.moc clicklineedit.moc playlistloader.moc queuemanager.moc covermanager.moc playlist.moc trackpickerdialog.moc lastfm.moc playerwindow.moc coverfetcher.moc enginebase.moc pixmapviewer.moc sliderwidget.moc
	@echo 'creating libamarok_la.all_cpp.cpp ...'; \
	rm -f libamarok_la.all_cpp.files libamarok_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libamarok_la.all_cpp.final; \
	for file in actionclasses.cpp app.cpp atomicstring.cpp atomicurl.cpp browserbar.cpp clicklineedit.cpp collectionbrowser.cpp collectiondb.cpp columnlist.cpp configdialog.cpp contextbrowser.cpp coverfetcher.cpp covermanager.cpp cuefile.cpp deletedialog.cpp deviceconfiguredialog.cpp devicemanager.cpp directorylist.cpp dynamicmode.cpp enginebase.cpp enginecontroller.cpp engineobserver.cpp equalizergraph.cpp equalizerpresetmanager.cpp equalizersetup.cpp expression.cpp fht.cpp filebrowser.cpp hintlineedit.cpp htmlview.cpp iconloader.cpp k3bexporter.cpp kbookmarkhandler.cpp ktrm.cpp lastfm.cpp mediabrowser.cpp mediadevicemanager.cpp medium.cpp mediumpluginmanager.cpp metabundle.cpp metabundlesaver.cpp moodbar.cpp mountpointmanager.cpp multitabbar.cpp mydiroperator.cpp osd.cpp pixmapviewer.cpp playerwindow.cpp playlist.cpp playlistbrowser.cpp playlistbrowseritem.cpp playlistitem.cpp playlistloader.cpp playlistselection.cpp playlistwindow.cpp pluginmanager.cpp podcastsettings.cpp prettypopupmenu.cpp queuemanager.cpp refreshimages.cpp scancontroller.cpp scriptmanager.cpp scrobbler.cpp sliderwidget.cpp smartplaylisteditor.cpp socketserver.cpp starmanager.cpp statistics.cpp systray.cpp tagdialog.cpp tagguesser.cpp threadmanager.cpp tooltip.cpp trackpickerdialog.cpp tracktooltip.cpp transferdialog.cpp xmlloader.cpp xspfplaylist.cpp editfilterdialog.cpp Options1.cpp Options2.cpp Options4.cpp Options5.cpp Options7.cpp Options8.cpp dbsetup.cpp deletedialogbase.cpp firstrunwizard.cpp newdynamic.cpp organizecollectiondialog.cpp podcastsettingsbase.cpp scriptmanagerbase.cpp tagdialogbase.cpp tagguesserconfigdialog.cpp trackpickerdialogbase.cpp ; do \
	  echo "#include \"$$file\"" >> libamarok_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libamarok_la.all_cpp.final; \
	done; \
	cat libamarok_la.all_cpp.final libamarok_la.all_cpp.files > libamarok_la.all_cpp.cpp; \
	rm -f libamarok_la.all_cpp.final libamarok_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f libamarok_la.all_cpp.cpp

#>+ 3
final:
	$(MAKE) libamarok_la_OBJECTS="$(libamarok_la_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) libamarok_la_OBJECTS="$(libamarok_la_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) libamarok_la_OBJECTS="$(libamarok_la_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) libamarok_la_OBJECTS="$(libamarok_la_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 208
directorylist.lo: directorylist.moc 
playlist.o: playlist.moc 
ktrm.o: ktrm.moc 
$(srcdir)/metabundle.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/covermanager.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
deletedialog.lo: deletedialog.moc 
mydiroperator.o: mydiroperator.moc 
refreshimages.lo: refreshimages.moc 
$(srcdir)/multitabbar.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
equalizerpresetmanager.lo: equalizerpresetmanager.moc 
app.lo: app.moc 
xmlloader.lo: xmlloader_p.moc xmlloader.moc 
mediabrowser.o: mediabrowser.moc 
$(srcdir)/dbsetup.ui.h: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
playlistwindow.lo: playlistwindow.moc 
$(srcdir)/transferdialog.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/prettypopupmenu.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
enginecontroller.o: enginecontroller.moc 
refreshimages.o: refreshimages.moc 
scrobbler.o: scrobbler.moc 
podcastsettings.lo: podcastsettings.moc 
collectionbrowser.o: collectionbrowser.moc 
nmcheck-am: nmcheck
$(srcdir)/osd.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
scriptmanager.lo: scriptmanager.moc 
columnlist.o: columnlist.moc 
playlistbrowser.lo: playlistbrowser.moc 
moodbar.o: moodbar.moc 
tooltip.lo: tooltip.moc 
$(srcdir)/lastfm.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/mydiroperator.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/systray.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/configdialog.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
hintlineedit.o: hintlineedit.moc 
tooltip.o: tooltip.moc 
osd.o: osd.moc 
columnlist.lo: columnlist.moc 
collectiondb.lo: collectiondb.moc 
$(srcdir)/trackpickerdialog.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
enginebase.lo: enginebase.moc 
$(srcdir)/xspfplaylist.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
htmlview.lo: htmlview.moc 
coverfetcher.lo: coverfetcher.moc 
$(srcdir)/expression.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
statistics.lo: statistics.moc 
$(srcdir)/smartplaylisteditor.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
hintlineedit.lo: hintlineedit.moc 
$(srcdir)/playerwindow.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/fht.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/playlistitem.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/kbookmarkhandler.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/coverfetcher.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
transferdialog.lo: transferdialog.moc 
smartplaylisteditor.lo: smartplaylisteditor.moc 
mediadevicemanager.lo: mediadevicemanager.moc 
directorylist.o: directorylist.moc 
coverfetcher.o: coverfetcher.moc 
mediadevicemanager.o: mediadevicemanager.moc 
$(srcdir)/deletedialog.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
browserbar.lo: browserbar.moc 
playlistselection.o: playlistselection.moc 
trackpickerdialog.o: trackpickerdialog.moc 
ktrm.lo: ktrm.moc 
tracktooltip.o: tracktooltip.moc 
$(srcdir)/engineobserver.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/tracktooltip.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
queuemanager.lo: queuemanager.moc 
$(srcdir)/mediabrowser.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
covermanager.o: covermanager.moc 
$(srcdir)/contextbrowser.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/tagdialog.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/atomicstring.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
devicemanager.lo: devicemanager.moc 
$(srcdir)/playlistwindow.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/medium.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
scancontroller.lo: scancontroller.moc 
scancontroller.o: scancontroller.moc 
$(srcdir)/mountpointmanager.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
deletedialog.o: deletedialog.moc 
configdialog.o: configdialog.moc 
editfilterdialog.o: editfilterdialog.moc 
$(srcdir)/statistics.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
playlistbrowseritem.lo: playlistbrowseritem.moc 
metabundlesaver.o: metabundlesaver.moc 
equalizerpresetmanager.o: equalizerpresetmanager.moc 
$(srcdir)/editfilterdialog.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
tracktooltip.lo: tracktooltip.moc 
scriptmanager.o: scriptmanager.moc 
starmanager.o: starmanager.moc 
playerwindow.lo: playerwindow.moc 
clicklineedit.lo: clicklineedit.moc 
$(srcdir)/playlistbrowser.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
trackpickerdialog.lo: trackpickerdialog.moc 
$(srcdir)/playlist.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
socketserver.o: socketserver.moc 
$(srcdir)/xmlloader.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/k3bexporter.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
multitabbar.o: multitabbar.moc multitabbar_p.moc 
$(srcdir)/dynamicmode.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
queuemanager.o: queuemanager.moc 
playerwindow.o: playerwindow.moc 
tagdialog.o: tagdialog.moc 
$(srcdir)/hintlineedit.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/tooltip.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/queuemanager.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
cuefile.o: cuefile.moc 
collectionbrowser.lo: collectionbrowser.moc 
contextbrowser.o: contextbrowser.moc 
mydiroperator.lo: mydiroperator.moc 
podcastsettings.o: podcastsettings.moc 
threadmanager.o: threadmanager.moc 
$(srcdir)/tagguesser.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/pluginmanager.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
playlistloader.lo: playlistloader.moc 
playlistloader.o: playlistloader.moc 
$(srcdir)/iconloader.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/pixmapviewer.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
metabundlesaver.lo: metabundlesaver.moc 
collectiondb.o: collectiondb.moc 
mediabrowser.lo: mediabrowser.moc 
$(srcdir)/scrobbler.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/enginebase.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
playlistbrowser.o: playlistbrowser.moc 
$(srcdir)/enginecontroller.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/filebrowser.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
app.o: app.moc 
sliderwidget.lo: sliderwidget.moc 
$(srcdir)/equalizergraph.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/moodbar.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
smartplaylisteditor.o: smartplaylisteditor.moc 
$(srcdir)/threadmanager.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
equalizersetup.lo: equalizersetup.moc 
$(srcdir)/playlistselection.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
statistics.o: statistics.moc 
lastfm.o: lastfm.moc 
equalizersetup.o: equalizersetup.moc 
editfilterdialog.lo: editfilterdialog.moc 
deviceconfiguredialog.lo: deviceconfiguredialog.moc 
enginecontroller.lo: enginecontroller.moc 
$(srcdir)/directorylist.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
moodbar.lo: moodbar.moc 
lastfm.lo: lastfm.moc 
$(srcdir)/cuefile.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/playlistloader.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
playlistbrowseritem.o: playlistbrowseritem.moc 
contextbrowser.lo: contextbrowser.moc 
deviceconfiguredialog.o: deviceconfiguredialog.moc 
enginebase.o: enginebase.moc 
$(srcdir)/equalizerpresetmanager.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
pixmapviewer.lo: pixmapviewer.moc 
mediumpluginmanager.lo: mediumpluginmanager.moc 
tagdialog.lo: tagdialog.moc 
$(srcdir)/devicemanager.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/equalizersetup.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/atomicurl.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/columnlist.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
mountpointmanager.o: mountpointmanager.moc 
$(srcdir)/Options1.ui.h: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
cuefile.lo: cuefile.moc 
$(srcdir)/refreshimages.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
browserbar.o: browserbar.moc 
$(srcdir)/mediadevicemanager.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/playlistbrowseritem.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
mountpointmanager.lo: mountpointmanager.moc 
$(srcdir)/collectionbrowser.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
prettypopupmenu.lo: prettypopupmenu.moc 
mediumpluginmanager.o: mediumpluginmanager.moc 
$(srcdir)/browserbar.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
devicemanager.o: devicemanager.moc 
$(srcdir)/scancontroller.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
starmanager.lo: starmanager.moc 
configdialog.lo: configdialog.moc 
xmlloader.o: xmlloader_p.moc xmlloader.moc 
htmlview.o: htmlview.moc 
clicklineedit.o: clicklineedit.moc 
playlistwindow.o: playlistwindow.moc 
actionclasses.lo: actionclasses.moc 
$(srcdir)/clicklineedit.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
filebrowser.lo: filebrowser.moc 
$(srcdir)/ktrm.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/collectiondb.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
filebrowser.o: filebrowser.moc 
multitabbar.lo: multitabbar.moc multitabbar_p.moc 
$(srcdir)/app.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
sliderwidget.o: sliderwidget.moc 
playlist.lo: playlist.moc 
$(srcdir)/podcastsettings.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/scriptmanager.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
osd.lo: osd.moc 
$(srcdir)/deviceconfiguredialog.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/mediumpluginmanager.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/metabundlesaver.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
scrobbler.lo: scrobbler.moc 
actionclasses.o: actionclasses.moc 
nmcheck: 
playlistselection.lo: playlistselection.moc 
$(srcdir)/htmlview.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
$(srcdir)/starmanager.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
prettypopupmenu.o: prettypopupmenu.moc 
$(srcdir)/socketserver.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
threadmanager.lo: threadmanager.moc 
transferdialog.o: transferdialog.moc 
pixmapviewer.o: pixmapviewer.moc 
covermanager.lo: covermanager.moc 
$(srcdir)/sliderwidget.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 
socketserver.lo: socketserver.moc 
$(srcdir)/actionclasses.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h deletedialogbase.h firstrunwizard.h newdynamic.h organizecollectiondialog.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h tagguesserconfigdialog.h trackpickerdialogbase.h 

#>+ 240
Options8.cpp: $(srcdir)/Options8.ui Options8.h Options8.moc
	rm -f Options8.cpp
	echo '#include <kdialog.h>' > Options8.cpp
	echo '#include <klocale.h>' >> Options8.cpp
	$(UIC) -tr ${UIC_TR} -i Options8.h $(srcdir)/Options8.ui > Options8.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" Options8.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_Options8,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> Options8.cpp ;\
	rm -f Options8.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "Options8.moc"' >> Options8.cpp; else rm -f Options8.cpp ; exit $$ret ; fi

Options8.h: $(srcdir)/Options8.ui
	rm -rf Options8.h;
	$(UIC) $(srcdir)/Options8.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> Options8.h ;
Options8.moc: Options8.h
	$(MOC) Options8.h -o Options8.moc

Options7.cpp: $(srcdir)/Options7.ui Options7.h Options7.moc
	rm -f Options7.cpp
	echo '#include <kdialog.h>' > Options7.cpp
	echo '#include <klocale.h>' >> Options7.cpp
	$(UIC) -tr ${UIC_TR} -i Options7.h $(srcdir)/Options7.ui > Options7.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" Options7.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_Options7,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> Options7.cpp ;\
	rm -f Options7.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "Options7.moc"' >> Options7.cpp; else rm -f Options7.cpp ; exit $$ret ; fi

Options7.h: $(srcdir)/Options7.ui
	rm -rf Options7.h;
	$(UIC) $(srcdir)/Options7.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> Options7.h ;
Options7.moc: Options7.h
	$(MOC) Options7.h -o Options7.moc

Options5.cpp: $(srcdir)/Options5.ui Options5.h Options5.moc
	rm -f Options5.cpp
	echo '#include <kdialog.h>' > Options5.cpp
	echo '#include <klocale.h>' >> Options5.cpp
	$(UIC) -tr ${UIC_TR} -i Options5.h $(srcdir)/Options5.ui > Options5.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" Options5.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_Options5,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> Options5.cpp ;\
	rm -f Options5.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "Options5.moc"' >> Options5.cpp; else rm -f Options5.cpp ; exit $$ret ; fi

Options5.h: $(srcdir)/Options5.ui
	rm -rf Options5.h;
	$(UIC) $(srcdir)/Options5.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> Options5.h ;
Options5.moc: Options5.h
	$(MOC) Options5.h -o Options5.moc

firstrunwizard.cpp: $(srcdir)/firstrunwizard.ui firstrunwizard.h firstrunwizard.moc
	rm -f firstrunwizard.cpp
	echo '#include <kdialog.h>' > firstrunwizard.cpp
	echo '#include <klocale.h>' >> firstrunwizard.cpp
	$(UIC) -tr ${UIC_TR} -i firstrunwizard.h $(srcdir)/firstrunwizard.ui > firstrunwizard.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" firstrunwizard.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_firstrunwizard,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> firstrunwizard.cpp ;\
	rm -f firstrunwizard.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "firstrunwizard.moc"' >> firstrunwizard.cpp; else rm -f firstrunwizard.cpp ; exit $$ret ; fi

firstrunwizard.h: $(srcdir)/firstrunwizard.ui
	rm -rf firstrunwizard.h;
	$(UIC) $(srcdir)/firstrunwizard.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> firstrunwizard.h ;
firstrunwizard.moc: firstrunwizard.h
	$(MOC) firstrunwizard.h -o firstrunwizard.moc

scriptmanagerbase.cpp: $(srcdir)/scriptmanagerbase.ui scriptmanagerbase.h scriptmanagerbase.moc
	rm -f scriptmanagerbase.cpp
	echo '#include <kdialog.h>' > scriptmanagerbase.cpp
	echo '#include <klocale.h>' >> scriptmanagerbase.cpp
	$(UIC) -tr ${UIC_TR} -i scriptmanagerbase.h $(srcdir)/scriptmanagerbase.ui > scriptmanagerbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" scriptmanagerbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_scriptmanagerbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> scriptmanagerbase.cpp ;\
	rm -f scriptmanagerbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "scriptmanagerbase.moc"' >> scriptmanagerbase.cpp; else rm -f scriptmanagerbase.cpp ; exit $$ret ; fi

scriptmanagerbase.h: $(srcdir)/scriptmanagerbase.ui
	rm -rf scriptmanagerbase.h;
	$(UIC) $(srcdir)/scriptmanagerbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> scriptmanagerbase.h ;
scriptmanagerbase.moc: scriptmanagerbase.h
	$(MOC) scriptmanagerbase.h -o scriptmanagerbase.moc

podcastsettingsbase.cpp: $(srcdir)/podcastsettingsbase.ui podcastsettingsbase.h podcastsettingsbase.moc
	rm -f podcastsettingsbase.cpp
	echo '#include <kdialog.h>' > podcastsettingsbase.cpp
	echo '#include <klocale.h>' >> podcastsettingsbase.cpp
	$(UIC) -tr ${UIC_TR} -i podcastsettingsbase.h $(srcdir)/podcastsettingsbase.ui > podcastsettingsbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" podcastsettingsbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_podcastsettingsbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> podcastsettingsbase.cpp ;\
	rm -f podcastsettingsbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "podcastsettingsbase.moc"' >> podcastsettingsbase.cpp; else rm -f podcastsettingsbase.cpp ; exit $$ret ; fi

podcastsettingsbase.h: $(srcdir)/podcastsettingsbase.ui
	rm -rf podcastsettingsbase.h;
	$(UIC) $(srcdir)/podcastsettingsbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> podcastsettingsbase.h ;
podcastsettingsbase.moc: podcastsettingsbase.h
	$(MOC) podcastsettingsbase.h -o podcastsettingsbase.moc

tagguesserconfigdialog.cpp: $(srcdir)/tagguesserconfigdialog.ui tagguesserconfigdialog.h tagguesserconfigdialog.moc
	rm -f tagguesserconfigdialog.cpp
	echo '#include <kdialog.h>' > tagguesserconfigdialog.cpp
	echo '#include <klocale.h>' >> tagguesserconfigdialog.cpp
	$(UIC) -tr ${UIC_TR} -i tagguesserconfigdialog.h $(srcdir)/tagguesserconfigdialog.ui > tagguesserconfigdialog.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" tagguesserconfigdialog.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_tagguesserconfigdialog,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> tagguesserconfigdialog.cpp ;\
	rm -f tagguesserconfigdialog.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "tagguesserconfigdialog.moc"' >> tagguesserconfigdialog.cpp; else rm -f tagguesserconfigdialog.cpp ; exit $$ret ; fi

tagguesserconfigdialog.h: $(srcdir)/tagguesserconfigdialog.ui
	rm -rf tagguesserconfigdialog.h;
	$(UIC) $(srcdir)/tagguesserconfigdialog.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> tagguesserconfigdialog.h ;
tagguesserconfigdialog.moc: tagguesserconfigdialog.h
	$(MOC) tagguesserconfigdialog.h -o tagguesserconfigdialog.moc

newdynamic.cpp: $(srcdir)/newdynamic.ui newdynamic.h newdynamic.moc
	rm -f newdynamic.cpp
	echo '#include <kdialog.h>' > newdynamic.cpp
	echo '#include <klocale.h>' >> newdynamic.cpp
	$(UIC) -tr ${UIC_TR} -i newdynamic.h $(srcdir)/newdynamic.ui > newdynamic.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" newdynamic.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_newdynamic,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> newdynamic.cpp ;\
	rm -f newdynamic.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "newdynamic.moc"' >> newdynamic.cpp; else rm -f newdynamic.cpp ; exit $$ret ; fi

newdynamic.h: $(srcdir)/newdynamic.ui
	rm -rf newdynamic.h;
	$(UIC) $(srcdir)/newdynamic.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> newdynamic.h ;
newdynamic.moc: newdynamic.h
	$(MOC) newdynamic.h -o newdynamic.moc

Options4.cpp: $(srcdir)/Options4.ui Options4.h Options4.moc
	rm -f Options4.cpp
	echo '#include <kdialog.h>' > Options4.cpp
	echo '#include <klocale.h>' >> Options4.cpp
	$(UIC) -tr ${UIC_TR} -i Options4.h $(srcdir)/Options4.ui > Options4.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" Options4.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_Options4,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> Options4.cpp ;\
	rm -f Options4.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "Options4.moc"' >> Options4.cpp; else rm -f Options4.cpp ; exit $$ret ; fi

Options4.h: $(srcdir)/Options4.ui
	rm -rf Options4.h;
	$(UIC) $(srcdir)/Options4.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> Options4.h ;
Options4.moc: Options4.h
	$(MOC) Options4.h -o Options4.moc

tagdialogbase.cpp: $(srcdir)/tagdialogbase.ui tagdialogbase.h tagdialogbase.moc
	rm -f tagdialogbase.cpp
	echo '#include <kdialog.h>' > tagdialogbase.cpp
	echo '#include <klocale.h>' >> tagdialogbase.cpp
	$(UIC) -tr ${UIC_TR} -i tagdialogbase.h $(srcdir)/tagdialogbase.ui > tagdialogbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" tagdialogbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_tagdialogbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> tagdialogbase.cpp ;\
	rm -f tagdialogbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "tagdialogbase.moc"' >> tagdialogbase.cpp; else rm -f tagdialogbase.cpp ; exit $$ret ; fi

tagdialogbase.h: $(srcdir)/tagdialogbase.ui
	rm -rf tagdialogbase.h;
	$(UIC) $(srcdir)/tagdialogbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> tagdialogbase.h ;
tagdialogbase.moc: tagdialogbase.h
	$(MOC) tagdialogbase.h -o tagdialogbase.moc

trackpickerdialogbase.cpp: $(srcdir)/trackpickerdialogbase.ui trackpickerdialogbase.h trackpickerdialogbase.moc
	rm -f trackpickerdialogbase.cpp
	echo '#include <kdialog.h>' > trackpickerdialogbase.cpp
	echo '#include <klocale.h>' >> trackpickerdialogbase.cpp
	$(UIC) -tr ${UIC_TR} -i trackpickerdialogbase.h $(srcdir)/trackpickerdialogbase.ui > trackpickerdialogbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" trackpickerdialogbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_trackpickerdialogbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> trackpickerdialogbase.cpp ;\
	rm -f trackpickerdialogbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "trackpickerdialogbase.moc"' >> trackpickerdialogbase.cpp; else rm -f trackpickerdialogbase.cpp ; exit $$ret ; fi

trackpickerdialogbase.h: $(srcdir)/trackpickerdialogbase.ui
	rm -rf trackpickerdialogbase.h;
	$(UIC) $(srcdir)/trackpickerdialogbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> trackpickerdialogbase.h ;
trackpickerdialogbase.moc: trackpickerdialogbase.h
	$(MOC) trackpickerdialogbase.h -o trackpickerdialogbase.moc

Options2.cpp: $(srcdir)/Options2.ui Options2.h Options2.moc
	rm -f Options2.cpp
	echo '#include <kdialog.h>' > Options2.cpp
	echo '#include <klocale.h>' >> Options2.cpp
	$(UIC) -tr ${UIC_TR} -i Options2.h $(srcdir)/Options2.ui > Options2.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" Options2.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_Options2,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> Options2.cpp ;\
	rm -f Options2.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "Options2.moc"' >> Options2.cpp; else rm -f Options2.cpp ; exit $$ret ; fi

Options2.h: $(srcdir)/Options2.ui
	rm -rf Options2.h;
	$(UIC) $(srcdir)/Options2.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> Options2.h ;
Options2.moc: Options2.h
	$(MOC) Options2.h -o Options2.moc

organizecollectiondialog.cpp: $(srcdir)/organizecollectiondialog.ui organizecollectiondialog.h organizecollectiondialog.moc
	rm -f organizecollectiondialog.cpp
	echo '#include <kdialog.h>' > organizecollectiondialog.cpp
	echo '#include <klocale.h>' >> organizecollectiondialog.cpp
	$(UIC) -tr ${UIC_TR} -i organizecollectiondialog.h $(srcdir)/organizecollectiondialog.ui > organizecollectiondialog.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" organizecollectiondialog.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_organizecollectiondialog,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> organizecollectiondialog.cpp ;\
	rm -f organizecollectiondialog.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "organizecollectiondialog.moc"' >> organizecollectiondialog.cpp; else rm -f organizecollectiondialog.cpp ; exit $$ret ; fi

organizecollectiondialog.h: $(srcdir)/organizecollectiondialog.ui
	rm -rf organizecollectiondialog.h;
	$(UIC) $(srcdir)/organizecollectiondialog.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> organizecollectiondialog.h ;
organizecollectiondialog.moc: organizecollectiondialog.h
	$(MOC) organizecollectiondialog.h -o organizecollectiondialog.moc

deletedialogbase.cpp: $(srcdir)/deletedialogbase.ui deletedialogbase.h deletedialogbase.moc
	rm -f deletedialogbase.cpp
	echo '#include <kdialog.h>' > deletedialogbase.cpp
	echo '#include <klocale.h>' >> deletedialogbase.cpp
	$(UIC) -tr ${UIC_TR} -i deletedialogbase.h $(srcdir)/deletedialogbase.ui > deletedialogbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" deletedialogbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_deletedialogbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> deletedialogbase.cpp ;\
	rm -f deletedialogbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "deletedialogbase.moc"' >> deletedialogbase.cpp; else rm -f deletedialogbase.cpp ; exit $$ret ; fi

deletedialogbase.h: $(srcdir)/deletedialogbase.ui
	rm -rf deletedialogbase.h;
	$(UIC) $(srcdir)/deletedialogbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> deletedialogbase.h ;
deletedialogbase.moc: deletedialogbase.h
	$(MOC) deletedialogbase.h -o deletedialogbase.moc

dbsetup.cpp: $(srcdir)/dbsetup.ui dbsetup.h dbsetup.moc
	rm -f dbsetup.cpp
	echo '#include <kdialog.h>' > dbsetup.cpp
	echo '#include <klocale.h>' >> dbsetup.cpp
	$(UIC) -tr ${UIC_TR} -i dbsetup.h $(srcdir)/dbsetup.ui > dbsetup.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" dbsetup.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_dbsetup,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> dbsetup.cpp ;\
	rm -f dbsetup.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "dbsetup.moc"' >> dbsetup.cpp; else rm -f dbsetup.cpp ; exit $$ret ; fi

dbsetup.h: $(srcdir)/dbsetup.ui
	rm -rf dbsetup.h;
	$(UIC) $(srcdir)/dbsetup.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> dbsetup.h ;
dbsetup.moc: dbsetup.h
	$(MOC) dbsetup.h -o dbsetup.moc

Options1.cpp: $(srcdir)/Options1.ui Options1.h Options1.moc
	rm -f Options1.cpp
	echo '#include <kdialog.h>' > Options1.cpp
	echo '#include <klocale.h>' >> Options1.cpp
	$(UIC) -tr ${UIC_TR} -i Options1.h $(srcdir)/Options1.ui > Options1.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" Options1.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_Options1,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> Options1.cpp ;\
	rm -f Options1.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "Options1.moc"' >> Options1.cpp; else rm -f Options1.cpp ; exit $$ret ; fi

Options1.h: $(srcdir)/Options1.ui
	rm -rf Options1.h;
	$(UIC) $(srcdir)/Options1.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> Options1.h ;
Options1.moc: Options1.h
	$(MOC) Options1.h -o Options1.moc
